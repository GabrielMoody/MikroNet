openapi: 3.0.3
info:
  title: MikroNet
  version: 1.0.0
servers:
  - url: http://localhost/api/v1/
  - url: http://localhost:8000/
  - url: http://localhost:8010/
  - url: http://localhost:8020/
  - url: http://localhost:8030/
  - url: http://localhost:8040/

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Authentication
  - name: Admin
  - name: Driver
  - name: User
  - name: Notification

paths:
#*################################################################################
#*                             AUTHENTICATION                                    #
#*################################################################################

  /register/user:
    post:
      tags:
        - Authentication
      summary: Register new profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                first_name: Gabriel Moody
                last_name: Waworundeng
                email: gabrie123l@mail.com
                phone_number: '089279213091'
                date_of_birth: 01-01-1970
                age: 54
                password: gabriel0803
                password_confirmation: gabriel0803
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /login:
    post:
      tags:
        - Authentication
      summary: User Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: gabrie123l@mail.com
                password: gabriel0803
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /change-password:
    post:
      tags:
        - Authentication
      summary: Change old password
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                old_password: "passwordlama"
                new_password: "passwordbaru"
                new_password_confirm: "passwordbaru"
      responses:
        '200':
          description: Successful response
          content:
            application/json: { }


  /reset-password{id}:
    post:
      tags:
        - Authentication
      summary: Request Reset Password Link
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: gabrielmdy08@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Authentication
      summary: Reset Password
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                password: '87654321'
                password_confirmation: '87654321'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

#*################################################################################
#*                                ADMIN                                          #
#*################################################################################

  /users:
    get:
      tags:
        - Admin
      summary: Get all users
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

#*################################################################################
#*                                DRIVER                                         #
#*################################################################################

  /status:
    get:
      tags:
        - Driver
      summary: Get driver status
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Driver
      summary: Update driver status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                status: 'off'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /seats:
    get:
      tags:
        - Driver
      summary: Get available seats
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Driver
      summary: Update the available seats
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                seat: 10
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

#*################################################################################
#*                                USER                                           #
#*################################################################################

  /:
    get:
      tags:
        - User
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - User
      summary: Update user profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                first_name: Gabriel Moody
                last_name: Waworundeng
                date_of_birth: 01-01-1970
                age: '54'
                gender: Male
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - User
      summary: Delete user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /sse/notification/{id}:
    get:
      tags:
        - Notification
      summary: Make a connection
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /015/sse/notify/{id}:
    post:
      tags:
        - Notification
      summary: Send a notification
      requestBody:
        content: {}
      parameters:
        - name: message
          in: query
          schema:
            type: string
          example: '{ "data": "adasda" , "location": "asdasd"}'
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}